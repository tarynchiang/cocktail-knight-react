{"version":3,"sources":["services/AuthService.js","components/signup/SignUp.js","components/login/LogIn.js","components/refrigerator/Refrigerator.js","components/cocktaildetails/CocktailDetails.js","components/addcocktail/AddCocktail.js","components/profile/Profile.js","components/homepage/homePage.js","components/navbar/navBar.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","_this","this","Object","classCallCheck","signup","username","password","service","post","then","response","data","login","currentUser","get","logout","axios","create","baseURL","process","REACT_APP_AUTHSERVICE_BASE_URL","withCredentials","SignUp","props","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","trytoSignUp","preventDefault","userName","state","usernameInput","passWord","passwordInput","console","log","toggleForm","getUser","react_default","a","createElement","className","onSubmit","onChange","type","onClick","cancelBtn","Component","LogIn","trytoLogIn","Refrigerator","addNewItem","concat","getMyIngredients","catch","err","deleteItem","theID","CompareTwoLists","arr1","arr2","filter","indexOf","getCocktailName","Ingredient","Cocktails","drinks","map","eachdrinkOB","idDrink","SearchByIngredients","_ref","asyncToGenerator","regenerator_default","mark","_callee","IngredientsList","result","Arr","i","wrap","_context","prev","next","sent","length","abrupt","stop","_x","apply","arguments","handleSearchInput","_callee2","searchList","_context2","MyIngredients","cocktailsID","fetchCocktailYouCanMake","info","final","forEach","eachCoctailID","push","all","results","eachThing","cocktailYouCanMake","showCocktailYouCanMake","eachCoctail","react_router_dom","exact","to","pathname","fromRefigerator","src","strDrinkThumb","strDrink","showAllIngredients","allTheIngredients","eachIngredient","showMyIngredients","_id","_this2","setTimeout","location","search","ready","mylistShowing","Details","getCocktailDetails","CocktailOB","ingredients","measures","measure","flag","instruction","strInstructions","img","glass","strGlass","Cocktail","goBack","history","showIngredients","showAmount","eachMeasure","showCocktailDetails","match","params","id","React","AddCocktail","handleFormSubmit","event","FormData","append","newImage","newName","newInstruction","newIngredients","headers","Content-Type","currentIngredient","error","_event$target","handleIngredients","clone","toConsumableArray","current","showIngredientyouhave","updateFileInState","files","style","marginTop","newDescription","Profile","addcocktail_AddCocktail","homePage","navBar","theUser","pleaseLogOut","App","getAllIngredients","listOfAllIngredients","myListOfIngredients","getMyCocktails","cocktails","getCurrentlyLoggedInUser","currentlyLoggedIn","whichForm","theForm","_this$setState","_this$setState2","signupShowing","loginShowing","navbar_navBar","signup_SignUp","login_LogIn","react_router","path","render","homepage_homePage","refrigerator_Refrigerator","assign","getData","CocktailDetails","profile_Profile","getMyCocktail","Boolean","window","hostname","ReactDOM","component","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.da772852.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService{\n\n    constructor(){\n        let service = axios.create({\n            baseURL: process.env.REACT_APP_AUTHSERVICE_BASE_URL,\n            withCredentials: true\n        })\n        this.service = service;\n    }\n\n    signup = (username,password)=>{\n        return (\n            this.service.post('/signup',{username:username, password:password})\n            .then(response => response.data)\n        )\n    }\n\n    login = (username,password)=>{\n        return(\n            this.service.post('/login',{username,password})\n            .then(response => response.data)\n        )\n    }\n\n    currentUser = () => {\n        return(\n            this.service.get('/getcurrentuser')\n            .then(response => response.data)\n        )\n    }\n\n    logout = ()=>{\n        return(\n            this.service.post('/logout',{})\n            .then(response => response.data)\n        )\n    }\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport AuthService from '../../services/AuthService.js';\nimport '../../App.css';\n\nclass SignUp extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            usernameInput:'',\n            passwordInput:'',\n        }\n        this.service = new AuthService();\n    }\n\n    handleChange = (e)=>{\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    trytoSignUp = (e)=>{\n        e.preventDefault();\n        const userName = this.state.usernameInput;\n        const passWord = this.state.passwordInput;\n\n        this.service.signup(userName,passWord)\n        .then((response)=>{\n            console.log('-----', response)\n            this.props.toggleForm('signup');\n            this.props.getUser();\n        })\n    }\n\n    \n    render(){\n        return(\n        <div className=\"form-sec\">\n            <form className='sign-form'onSubmit={this.trytoSignUp}>\n                <h3>Sign Up Today</h3>\n                \n                <legend>Username</legend>\n                <input value={this.state.usernameInput}\n                        name=\"usernameInput\"\n                        onChange={this.handleChange}\n                />\n\n                <legend>Password</legend>\n                <input  type=\"password\"\n                        value={this.state.passwordInput}\n                        name=\"passwordInput\"\n                        onChange={this.handleChange}\n                />\n\n                <div className=\"btn-sec\">\n                    <button className=\"btn\" onClick={this.props.cancelBtn}>Cancel</button>\n                    <button className=\"btn\">Submit</button>\n                </div>\n\n            </form>\n        </div>\n        )\n    }\n}\n\nexport default SignUp;","import React, { Component } from 'react';\nimport AuthService from '../../services/AuthService';\nimport '../../App.css';\n\nclass LogIn extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            usernameInput:'',\n            passwordInput:'',\n        }\n        this.service = new AuthService();\n    }\n\n    handleChange = (e)=>{\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    trytoLogIn = (e)=>{\n        e.preventDefault();\n        const userName = this.state.usernameInput;\n        const passWord = this.state.passwordInput;\n\n        this.service.login(userName,passWord)\n        .then((response)=>{\n            console.log('-----', response)\n            this.props.toggleForm('login');\n            this.props.getUser();\n            // this.props.history.push('/firstpage')\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"form-sec\">\n                <form className='sign-form'onSubmit={this.trytoLogIn}>\n                    <h3>Log In</h3>\n                    \n                    <legend>Username</legend>\n                    <input value={this.state.usernameInput}\n                            name=\"usernameInput\"\n                            onChange={this.handleChange}\n                    />\n\n                    <legend>Password</legend>\n                    <input  type=\"password\"\n                            value={this.state.passwordInput}\n                            name=\"passwordInput\"\n                            onChange={this.handleChange}\n                    />\n                    <div className='btn-sec'>\n                        <button className=\"btn\" onClick={this.props.cancelBtn}>Cancel</button>\n                        <button className=\"btn\">Log In</button>\n                    </div>\n\n                </form>\n\n            </div>\n        )\n    }\n\n}\n\nexport default LogIn; ","import React, { Component } from 'react';\nimport '../../App.css';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n class Refrigerator extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            cocktailsID : [],\n            cocktailYouCanMake:[]\n        }\n    }\n\n    componentDidMount(){\n        setTimeout(()=>{\n\n            if(this.props.location.state){\n                if(this.props.location.state.search){\n                    this.props.location.state.search = false;\n                    this.handleSearchInput();\n                }\n            }\n        },250)\n     \n    }\n\n\n    addNewItem = (e)=>{\n        axios.post(`${process.env.REACT_APP_BASE}create-item`,{name: e.target.name,}, {withCredentials: true})\n        .then(()=>{\n            console.log('success create')\n            this.props.getMyIngredients();\n        })\n        .catch((err)=>{\n            console.log(err);\n        })\n    }\n\n    deleteItem = (theID)=>{\n        axios.post(`${process.env.REACT_APP_BASE}delete-item/`+theID)\n        .then(()=>{\n            console.log('success delete')\n            this.props.getMyIngredients();\n        })\n        .catch((err)=>{\n            console.log(err);\n        })\n    }\n\n\n    CompareTwoLists = (arr1,arr2)=>{\n        return arr1.filter(value => -1 !== arr2.indexOf(value))\n    }\n\n    getCocktailName = (Ingredient) =>{\n        return axios.get('https://www.thecocktaildb.com/api/json/v1/1/filter.php?i='+Ingredient.name)\n        .then((Cocktails)=>{\n            console.log('Cocktails',Cocktails)\n            let result = Cocktails.data.drinks.map((eachdrinkOB)=>{\n                return eachdrinkOB.idDrink;\n            })\n            return result;\n        })\n    }\n\n    SearchByIngredients = async (IngredientsList)=>{\n        let result,Arr;\n        console.log('IngredientsList',IngredientsList);\n        \n        result = await this.getCocktailName(IngredientsList[0]);\n        \n        if(IngredientsList.length===1){\n            console.log(\"result>>>>\",result);\n            return result;\n        }\n\n        for(let i=1;i < IngredientsList.length;i++){\n            Arr = await this.getCocktailName(IngredientsList[i]);\n            result = await this.CompareTwoLists(Arr,result);\n        }\n\n        console.log(\"result>>>>\",result);\n        return result;\n    }\n\n    handleSearchInput = async ()=>{\n        let searchList = await this.SearchByIngredients(this.props.MyIngredients);\n        this.setState({\n            cocktailsID: searchList\n        });\n        this.fetchCocktailYouCanMake();\n    }\n    \n    fetchCocktailYouCanMake = ()=>{\n        let info = [];\n        let final = [];\n\n\n        this.state.cocktailsID.forEach((eachCoctailID,i)=>{\n         info.push(axios.get('https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i='+eachCoctailID))\n        })\n\n        axios.all(info).then((results)=>{\n            console.log('info----------',results);\n\n            results.forEach((eachThing)=>{\n\n                final.push(eachThing.data.drinks[0]);\n\n            })\n\n            this.setState({cocktailYouCanMake: final})\n\n        })\n    }\n\n    showCocktailYouCanMake = ()=>{\n        if(this.state.cocktailYouCanMake.length===0){\n            return(\n                <h1>Sorry No Cocktail found :(</h1>\n            )\n        }\n        \n        return this.state.cocktailYouCanMake.map((eachCoctail, i)=>{\n           return(\n               <Link exact to={{\n                  pathname: '/details/'+eachCoctail.idDrink,\n                  state:{fromRefigerator: true},\n                }}\n               className=\"eachCocktail\">\n                   <img src={eachCoctail.strDrinkThumb}/>\n                   <h3>{eachCoctail.strDrink}</h3>\n               </Link>\n           )\n        })\n    }\n\n    showAllIngredients = ()=>{\n        return this.props.allTheIngredients.map((eachIngredient)=>{\n            return(\n                <li>\n                    <button className='eachIngredient' onClick={this.addNewItem} name={eachIngredient}>{eachIngredient}</button>\n                </li>\n            )\n        })\n    }\n\n    showMyIngredients = ()=>{\n        return this.props.MyIngredients.map((eachIngredient)=>{\n            return(\n                    <li className=\"eachMyIngredient\">\n                    <span>{eachIngredient.name}</span>\n                    <button className=\"delete-btn\" onClick={()=>{this.deleteItem(eachIngredient._id)}}>\n                        <img src=\"/images/delete-button.png\"/>\n                    </button>\n                    </li>\n            )\n        })\n    }\n\n            \n    render(){\n        console.log('my state',this.state);\n        if(this.props.ready && this.props.mylistShowing){\n            return(\n                <div className=\"Ingredient-page\">\n                    <div className=\"list-part\">\n                        <div className=\"list-sec\">\n                            <ul className=\"IngredientsList\">\n                                {this.showAllIngredients()}\n                            </ul>\n                            <div className='MyIngredientsList'>\n                                <h1>My Ingredients</h1>\n                                {this.showMyIngredients()}\n                            </div>\n                        </div>\n                        \n                        <button className=\"search-btn\"onClick={this.handleSearchInput}>Search</button>\n                    \n                    </div>\n                    <div className='myCocktailList'>\n                        {this.showCocktailYouCanMake()}\n                    </div>\n                </div>\n            )\n        }\n        else if(this.props.ready){\n            return(\n                <div>\n                    <ul className=\"IngredientsList\">\n                        {this.showAllIngredients()}\n                    </ul>\n                </div>\n            )\n        }\n        else {\n            return(\n                <h1>Loading...</h1>\n            )\n        }\n    }\n\n}\n\nexport default Refrigerator; ","import React from 'react';\nimport '../../App.css';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass Details extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            Cocktail:{},\n            ready:false,\n        }\n    }\n    \n    getCocktailDetails = (theID)=>{\n        let info = {};\n        axios.get('https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i='+theID)\n        .then((CocktailOB)=>{\n            console.log('0-0-0-0-0-', CocktailOB.data.drinks[0]);\n            info.name = CocktailOB.data.drinks[0].strDrink;\n            info.ingredients = [];\n            info.measures = [];\n            let i=1;\n            let Ingredient,measure;\n            let flag=true;\n            while(flag){\n                Ingredient = CocktailOB.data.drinks[0]['strIngredient'+i];\n                measure = CocktailOB.data.drinks[0]['strMeasure'+i];\n                if(Ingredient.length === 0){\n                    flag=false;\n                }else{\n                    info.ingredients.push(Ingredient);\n                    info.measures.push(measure);\n                }\n                i++;\n            }\n            info.instruction = CocktailOB.data.drinks[0].strInstructions;\n            info.img = CocktailOB.data.drinks[0].strDrinkThumb;\n            info.glass = CocktailOB.data.drinks[0].strGlass;\n            this.setState({Cocktail: info, ready:true})\n        })\n    }\n\n\n    goBack = ()=>{\n        if(this.props.location.state){\n            if(this.props.location.state.fromRefigerator){\n                this.props.location.state.fromRefigerator = false;\n                this.props.history.push({\n                    pathname:\"/refrigerator\", \n                    state:{search:true} \n                });\n\n            } else{\n                this.props.history.goBack()\n            }\n        } else{\n            this.props.history.goBack()\n        }\n\n    }\n\n\n    showIngredients = ()=>{\n        return this.state.Cocktail.ingredients.map((eachIngredient)=>{\n            return(\n                <li>{eachIngredient}</li>\n            )\n        })\n    }\n\n    showAmount = ()=>{\n        return this.state.Cocktail.measures.map((eachMeasure)=>{\n            return(\n                <li>{eachMeasure}</li>\n            )\n        })\n    }\n\n\n    showCocktailDetails = ()=>{\n        \n        return(\n            <div className=\"Details-page\">\n                <div className=\"Cocktail-details\">\n                    <img src={this.state.Cocktail.img}/>\n                    <div className=\"Cocktail-info\">\n                        <h1>{this.state.Cocktail.name}</h1>\n                        <h3>Ingredients</h3>\n                        <div className=\"Amount\">\n                            <ul>{this.showIngredients()}</ul>\n                            <ul>{this.showAmount()}</ul>\n                        </div>\n                        <h3>Description</h3>\n                        <p>{this.state.Cocktail.instruction}</p>\n                    </div>\n                </div>\n                    <button onClick={this.goBack} className=\"GoBack-btn\">\n                        <img src=\"/images/backarrow.png\"/>\n                    </button>\n            </div>\n        )\n    }\n\n    componentDidMount(){\n        this.getCocktailDetails(this.props.match.params.id);\n    }\n    \n    \n    render(){\n        \n        if(this.state.ready){\n            return(\n                <div>\n                    {this.showCocktailDetails()}\n                </div>\n            )\n        }else{\n            return(\n                <h1>Loading...</h1>\n            )\n        }\n    }\n}\n\nexport default Details; ","import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass AddCocktail extends Component {\n  constructor(props){\n      super(props);\n      this.state = { \n          newName: \"\", \n          newIngredients:[],\n          newInstruction: \"\", \n          newImage: null,\n          currentIngredient:\"\",\n         }; \n  }\n   \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    let data = new FormData();\n    data.append('theImage', this.state.newImage);\n    data.append('theName', this.state.newName);\n    data.append('theDescription', this.state.newInstruction);\n    data.append('theIngredients',this.state.newIngredients);\n\n\n    axios.post(`${process.env.REACT_APP_BASE}create-cocktail`, data, { headers: {\n      'Content-Type': 'multipart/form-data',\n    }, withCredentials: true })\n    .then( () => {\n        // this.props.getData();\n        // this function updates the list in ProjectIndex.js\n        this.setState({\n            newName: \"\", \n            newIngredients:[],\n            newInstruction: \"\", \n            newImage: null,\n            currentIngredient:\"\"});\n    })\n    .catch( error => console.log(error))\n  }\n\n  handleChange = (event) => {  \n      const {name, value} = event.target;\n      this.setState({[name]: value});\n  }\n\n  handleIngredients = () =>{\n    let clone = [...this.state.newIngredients];\n    let current = this.state.currentIngredient;\n    clone.push(current);\n    this.setState({\n        newIngredients: clone,\n        currentIngredient: \"\",\n    })\n  }\n\n  showIngredientyouhave = () =>{\n      return this.state.newIngredients.map((eachIngredient)=>{\n        return(\n            <p>{eachIngredient}</p>\n        )\n      })\n  }\n  \n\n  updateFileInState = (e) =>{\n    this.setState({newImage: e.target.files[0]})\n  }\n\n  render(){\n    console.log(this.state)\n    return(\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <legend style={{marginTop: '100px'}}>Choose a Picture</legend>\n          <input type=\"file\" onChange={this.updateFileInState} />\n          \n          <legend>Name:</legend>\n          <input type=\"text\" name=\"newName\" value={this.state.newName} onChange={ e => this.handleChange(e)}/>\n          \n          <legend>Ingredients</legend>\n          <input type=\"text\" name=\"currentIngredient\" value={this.state.currentIngredient} onChange={ e => this.handleChange(e)}/>\n          <button onClick={this.handleIngredients}>+</button>\n            {this.showIngredientyouhave()}\n          <legend>Instruction:</legend>\n          <textarea name=\"newDescription\" value={this.state.newDescription} onChange={ e => this.handleChange(e)} />\n          \n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AddCocktail;","import React from 'react';\nimport '../../App.css';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport AddCocktail from \"../addcocktail/AddCocktail.js\";\n\nclass Profile extends React.Component{\n    render(){\n        return(\n            <div>\n                hi\n                <AddCocktail/>\n            </div>\n        )\n    }\n}\n\nexport default Profile;","import React from 'react';\nimport {Link, NavLink} from 'react-router-dom';\n\nfunction homePage(props){\n    return(\n        <div className='Home-page'>\n            <h1>Start your Night with Your Favorite <i>Cocktail</i></h1>\n        </div>\n\n    )\n}\n\nexport default homePage; ","import React from 'react';\nimport {Link, NavLink} from 'react-router-dom';\nimport '../../App.css';\nfunction navBar(props){\n        \n    const doTheLogout = () =>{\n        props.pleaseLogOut()\n        .then(()=>{\n            props.getUser();\n        })\n\n    }\n    return(\n        <nav>\n\n            {!props.theUser && \n                <span>\n                    <button className=\"btn\" onClick = {()=> props.toggleForm('signup')}>Sign Up</button>\n                    <button className=\"btn\" onClick = {()=> props.toggleForm('login')} > Login </button>\n                </span>\n            }\n\n            {props.theUser && \n            <span>\n\n            <button className=\"btn\" onClick = {doTheLogout} >Log Out </button>\n\n                {/* <span>Hello, {props.theUser.username}</span> */}\n            </span>\n            }\n\n        </nav>\n    )\n}\n\nexport  default navBar;","import React from 'react';\nimport './App.css';\nimport {Route, Link, Switch} from 'react-router-dom';\nimport SignUp from \"./components/signup/SignUp.js\"\nimport LogIn from \"./components/login/LogIn.js\";\nimport Refrigerator from \"./components/refrigerator/Refrigerator.js\";\nimport CocktailDetails from \"./components/cocktaildetails/CocktailDetails.js\";\nimport Profile from \"./components/profile/Profile.js\"\nimport Homepage from \"./components/homepage/homePage.js\";\nimport AuthService from './services/AuthService.js';\nimport NavBar from './components/navbar/navBar.js';\nimport axios from 'axios';\n\nclass App extends React.Component{\n\n\n  constructor(props){\n    super(props);\n    this.state={\n      listOfAllIngredients:[],\n      myListOfIngredients:[],\n      currentlyLoggedIn: null,\n      signupShowing: false,\n      loginShowing: false,\n      ready: false,\n      mylistShowing:false,\n    }\n\n    this.service = new AuthService();\n  }\n\n  \n  getAllIngredients =()=>{\n    axios.get(`${process.env.REACT_APP_BASE}ingredients-list`)\n    .then((ingredients)=>{\n      // console.log('ingredients from backend=========',ingredients.data)\n      this.setState({listOfAllIngredients: ingredients.data, ready:true})\n    })\n  }\n\n  getMyIngredients = () =>{\n    axios.get(`${process.env.REACT_APP_BASE}ingredient-you-have`, {withCredentials: true})\n    .then((ingredients)=>{\n      console.log('my ingredients<<<<<<',ingredients.data)\n        this.setState({myListOfIngredients: ingredients.data, mylistShowing:true})\n    })\n  }\n\n  getMyCocktails = () =>{\n    axios.get(`${process.env.REACT_APP_BASE}yourowncocktail`, {withCredentials: true})\n    .then((cocktails)=>{\n      console.log('my cocktails<<<<<<',cocktails)\n        // this.setState({myListOfIngredients: ingredients.data})\n    })\n  }\n\n\n  getCurrentlyLoggedInUser = () =>{\n    this.service.currentUser()\n    .then((theUser)=>{\n      this.setState({currentlyLoggedIn: theUser})\n    })\n    .catch(()=>{\n      this.setState({currentlyLoggedIn: null})\n    })\n  }\n\n\n  toggleForm = (whichForm) =>{\n\n    let theForm;\n  \n    if(whichForm === \"signup\"){\n      theForm = 'signupShowing';\n      this.setState({[theForm]: !this.state[theForm],loginShowing:false})\n    \n    } else {\n      theForm = 'loginShowing';\n      this.setState({[theForm]: !this.state[theForm], signupShowing:false})\n    }\n  \n  }\n\n  cancelBtn =()=>{\n    this.setState({\n      signupShowing: false,\n      loginShowing: false,\n    })\n  }\n\n  componentDidMount() {\n    this.getMyIngredients();\n    this.getCurrentlyLoggedInUser();\n    this.getAllIngredients();\n  }\n\n\n  render(){\n    return (\n      <div>\n        <NavBar \n          theUser = {this.state.currentlyLoggedIn} \n          pleaseLogOut = {()=> this.service.logout()}\n          toggleForm = {this.toggleForm}\n          getUser = {this.getCurrentlyLoggedInUser}\n        />\n\n        {this.state.signupShowing && <SignUp\n            getUser = {this.getCurrentlyLoggedInUser}\n            signupShowing = {this.signupShowing}\n            toggleForm={this.toggleForm}\n            cancelBtn={this.cancelBtn}/>\n        }\n        {this.state.loginShowing &&\n          <LogIn getUser = {this.getCurrentlyLoggedInUser} \n            toggleForm={this.toggleForm}\n            cancelBtn={this.cancelBtn}/>\n        }\n\n        <Switch>\n          <Route exact path=\"/\" render = {(props)=> <Homepage {...props}/>}/>\n          <Route exact path=\"/refrigerator\" render ={(props)=> <Refrigerator\n            {...props} \n            allTheIngredients ={this.state.listOfAllIngredients}\n            MyIngredients = {this.state.myListOfIngredients}\n            getMyIngredients = {this.getMyIngredients}\n            ready = {this.state.ready}\n            mylistShowing = {this.state.mylistShowing}\n            getData = {this.getAllIngredients}\n            theUser = {this.state.currentlyLoggedIn} \n            />} />\n\n          <Route exact path=\"/details/:id\" render ={(props)=> <CocktailDetails\n            {...props} \n            allTheIngredients ={this.state.listOfAllIngredients}\n            MyIngredients = {this.state.myListOfIngredients}\n            getMyIngredients = {this.getMyIngredients}\n            ready = {this.state.ready}\n            mylistShowing = {this.state.mylistShowing}\n            getData = {this.getAllIngredients}\n            theUser = {this.state.currentlyLoggedIn} \n            />}/>\n          \n          <Route exact path=\"/profile\" render = {(props)=> <Profile\n          {...props}\n          getMyCocktail ={this.getMyCocktails}\n          />}/>\n\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Route path=\"/\" component = {App}     />\n    </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}